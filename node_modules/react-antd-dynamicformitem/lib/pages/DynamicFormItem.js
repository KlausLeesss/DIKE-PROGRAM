"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _col = _interopRequireDefault(require("antd/es/col"));

var _row = _interopRequireDefault(require("antd/es/row"));

var _icon = _interopRequireDefault(require("antd/es/icon"));

var _button = _interopRequireDefault(require("antd/es/button"));

var _form = _interopRequireDefault(require("antd/es/form"));

require("antd/es/col/style/css");

require("antd/es/row/style/css");

require("antd/es/icon/style/css");

require("antd/es/form/style/css");

require("antd/es/button/style/css");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// 加载 CSS
var FormItem = _form.default.Item;

var DynamicFormItem =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(DynamicFormItem, _React$Component);

  function DynamicFormItem(props) {
    var _this;

    (0, _classCallCheck2.default)(this, DynamicFormItem);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DynamicFormItem).call(this, props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "remove", function (k) {
      var _this$props = _this.props,
          setFieldsValue = _this$props.setFieldsValue,
          getFieldValue = _this$props.getFieldValue,
          keysName = _this$props.keysName;
      var keys = getFieldValue("".concat(keysName));

      if (keys.length === 1) {
        return;
      }

      var params = {};
      params[keysName] = keys.filter(function (key) {
        return key.keyName !== k.keyName;
      });
      setTimeout(setFieldsValue(_objectSpread({}, params)), 100);

      _this.forceUpdate();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "add", function () {
      var _this$props2 = _this.props,
          setFieldsValue = _this$props2.setFieldsValue,
          getFieldValue = _this$props2.getFieldValue,
          keysName = _this$props2.keysName;
      var keys = getFieldValue("".concat(keysName));
      var params = {}; //

      var newKeys = [_objectSpread({
        keyName: _this.uuid
      }, _this.newKey)];
      params[keysName] = keys.concat(newKeys);
      setTimeout(setFieldsValue(_objectSpread({}, params)), 100);
      _this.uuid++;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderViewOnchange", function (data, keyData) {
      data = _objectSpread({}, keyData, {}, data);
      var _this$props3 = _this.props,
          setFieldsValue = _this$props3.setFieldsValue,
          getFieldValue = _this$props3.getFieldValue,
          keysName = _this$props3.keysName;
      var keys = getFieldValue("".concat(keysName));
      var index = keys.findIndex(function (key) {
        return data.keyName === key.keyName;
      });

      if (index !== -1) {
        keys.splice(index, 1, data);
      }

      var params = {};
      params[keysName] = keys;
      setTimeout(setFieldsValue(_objectSpread({}, params)), 100);
    });
    var newKey = props.newKey,
        _keys = props.keys;
    _this.newKey = newKey;
    _this.keysName = _keys;
    _this.uuid = props.renderViewData.length;
    _this.state = {};
    return _this;
  }

  (0, _createClass2.default)(DynamicFormItem, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props4 = this.props,
          keysName = _this$props4.keysName,
          getFieldValue = _this$props4.getFieldValue;
      var keys = getFieldValue("".concat(keysName));

      if (keys.length === 0) {
        this.add();
      }

      ;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props5 = this.props,
          keysName = _this$props5.keysName,
          getFieldDecorator = _this$props5.getFieldDecorator,
          getFieldValue = _this$props5.getFieldValue,
          extra = _this$props5.extra,
          renderViewData = _this$props5.renderViewData,
          lable = _this$props5.lable,
          renderView = _this$props5.renderView,
          addButtonStyle = _this$props5.addButtonStyle,
          addView = _this$props5.addView,
          other = (0, _objectWithoutProperties2.default)(_this$props5, ["keysName", "getFieldDecorator", "getFieldValue", "extra", "renderViewData", "lable", "renderView", "addButtonStyle", "addView"]); // 有默认传来的 chang事件，和 value值

      var formItemLayout = {
        labelCol: {
          xs: {
            span: 24
          },
          sm: {
            span: 8
          }
        },
        wrapperCol: {
          xs: {
            span: 24
          },
          sm: {
            span: 14
          }
        }
      };
      var formItemLayoutWithOutLabel = {
        wrapperCol: {
          xs: {
            span: 24,
            offset: 0
          },
          sm: {
            span: 14,
            offset: 8
          }
        }
      };
      var initialValue = [];
      renderViewData.map(function (key) {
        initialValue.push(_objectSpread({
          keyName: _this2.uuid
        }, key));
        _this2.uuid++;
      });
      getFieldDecorator("".concat(keysName), {
        initialValue: initialValue
      });
      var keys = getFieldValue("".concat(keysName));
      var formItems = keys.map(function (key, index) {
        var params = {
          renderViewOnchange: _this2.renderViewOnchange,
          key: key
        };
        return _react.default.createElement(FormItem, (0, _extends2.default)({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {
          label: index === 0 ? lable : '',
          required: false,
          key: index,
          extra: index === 0 ? extra : ''
        }, other), _react.default.createElement(_row.default, {
          gutter: 16
        }, _react.default.createElement(_col.default, {
          span: 20
        }, renderView(params)), _react.default.createElement(_col.default, {
          span: 2
        }, keys.length > 1 ? _react.default.createElement(_icon.default, {
          className: "dynamic-delete-button",
          type: "minus-circle-o",
          onClick: function onClick() {
            return _this2.remove(key);
          }
        }) : null)));
      });
      return _react.default.createElement(_row.default, null, formItems, _react.default.createElement(FormItem, formItemLayoutWithOutLabel, _react.default.createElement(_button.default, {
        type: "dashed",
        onClick: this.add,
        style: _objectSpread({
          width: '60%'
        }, addButtonStyle)
      }, addView ? addView : _react.default.createElement("view", null, _react.default.createElement(_icon.default, {
        type: "plus"
      }), "Add field"))));
    }
  }]);
  return DynamicFormItem;
}(_react.default.Component);

var _default = DynamicFormItem;
exports.default = _default;